// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SacramentApp.Data;
using SacramentApp.Models;
using System;

namespace SacramentApp.Migrations
{
    [DbContext(typeof(MeetingContext))]
    partial class MeetingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SacramentApp.Models.Hymn", b =>
                {
                    b.Property<int>("HymnID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MeetingID");

                    b.Property<int>("Number");

                    b.Property<int>("Order");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("HymnID");

                    b.HasIndex("MeetingID");

                    b.ToTable("Hymn");
                });

            modelBuilder.Entity("SacramentApp.Models.Meeting", b =>
                {
                    b.Property<int>("MeetingID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Conductor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("MeetingDate");

                    b.HasKey("MeetingID");

                    b.ToTable("Meeting");
                });

            modelBuilder.Entity("SacramentApp.Models.Prayer", b =>
                {
                    b.Property<int>("PrayerID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MeetingID");

                    b.Property<int>("Order");

                    b.Property<string>("PrayerName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("PrayerID");

                    b.HasIndex("MeetingID");

                    b.ToTable("Prayer");
                });

            modelBuilder.Entity("SacramentApp.Models.Speaker", b =>
                {
                    b.Property<int>("SpeakerID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MeetingID");

                    b.Property<int>("Order");

                    b.Property<string>("SpeakerName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("SpeakerID");

                    b.HasIndex("MeetingID");

                    b.ToTable("Speaker");
                });

            modelBuilder.Entity("SacramentApp.Models.Hymn", b =>
                {
                    b.HasOne("SacramentApp.Models.Meeting")
                        .WithMany("Hymns")
                        .HasForeignKey("MeetingID");
                });

            modelBuilder.Entity("SacramentApp.Models.Prayer", b =>
                {
                    b.HasOne("SacramentApp.Models.Meeting")
                        .WithMany("Prayers")
                        .HasForeignKey("MeetingID");
                });

            modelBuilder.Entity("SacramentApp.Models.Speaker", b =>
                {
                    b.HasOne("SacramentApp.Models.Meeting")
                        .WithMany("Speakers")
                        .HasForeignKey("MeetingID");
                });
#pragma warning restore 612, 618
        }
    }
}
